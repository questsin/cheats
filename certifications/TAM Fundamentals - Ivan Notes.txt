TAM Fundamentals

MODULE 1

- enterprise-wide decomposition and model of application functionality
- consistent common terminology
- separation of application neutral from application specific model
- automates the business processes in the eTOM
- five goals: common vocabulary; standard application requirements; enables process automation; facilitates mergers and acquisitions; guide efficient system architecture development and deployment
(note supplier partner domain has not yet been replaced by the engaged party domain).
(note Integration Infrastructure domain is not in the SID nor the eTOM).
- categorized same as Business Process Framework

MODULE 2
Framework Key Concepts and Structure
- three key concepts:
- "application": a cluster of related functionalities; abstract logical description; "product": realization of an application
- "functionality": textual description of a capability; may have many levels
- eight + one "domains": market/sales; product; customer;service;resource;supplier partner;enterprise;cross domain; integration infrastructure
- three basic themes:
	- task-centric: collection of functionalities supporting a specific task; typically a business process
	- entity-centric: grouping based on a specific entity; typically an ABE
	- utility-centric: functionality pattern across the enterprise

MODULE 3
Extending the Framework
- grouping guidelines: by functional areas; by end user consumption; by purpose or objective; by lifecycle of a key business entity
- naming: noun phrase; avoid "&", "and", "/"; 
- must have at least two applications in the decomposition;

MODULE 4
Using the Framework
- uses: 
	common application language;
	application inventory;
	applicationa architecture reference map;
	procurement support tool;
	mergers & acquisitions rationalization;
	application design;
	ecosystem fitness;
	market segmentation;
	cataloguing functionality;
- common application language:
	makes it easier to spread ideas
	increases communications effectiveness
- application architecture reference map
- mergers and acquisitions
	easier to identify integrations points
	identify possible duplicates and candidates for rationalization
- application design
	vendors are aligning...
- ecosystem fitness
- market segmentation
- cataloguing functionality

MODULE 5
Implementation Case Studies

Ecosystem Fitness / System Integrator
- eliminate overlapping functionality
- define an application's scope
- common language
- application boundaries
- service assurance ecosystem / application clusters

Business Transformation: A Service Provider View
- principles: service-oriented architecture; flexible and efficient; based on standards; use COTS
- principles delivered using all frameworks hand-in-hand
- enables focused discussions
- map existing apps to framework; highlights gaps and overlaps
- frameworks can help build an RFP

COTS Design Example: An Independent Software Vendor (ISV) View
- problems: customer diversity; TCO; innovation
- used TAM for common language; reduce development risk; TCO reduction through re-use and volume
- used eTOM for standard structure and terminology; consistent work flows; understand and manage portfolios

		